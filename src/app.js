// ░█▀▀░▀█▀░▀█▀░▀█▀░█▀█░█░░░█▀█░▀█▀░█▀▀
// ░█░░░░█░░░█░░░█░░█▀▀░█░░░█▀█░░█░░█▀▀
// ░▀▀▀░▀▀▀░░▀░░▀▀▀░▀░░░▀▀▀░▀░▀░░▀░░▀▀▀
//                              Node.js
//
// Visit https://github.com/CITi-UFPE/citiplate-node/wiki
// to see the full documentation. Made with </> and <3


const express = require('express');
const morgan = require('morgan');
const helmet = require('helmet');
const cors = require('cors');
const swaggerUi = require('swagger-ui-express');
const swaggerJsdoc = require('swagger-jsdoc');

const routes = require('./routes');

class Application {
  constructor() {
    this.options = {
      swaggerDefinition: {
        // Like the one described here: https://swagger.io/specification/#infoObject
        info: {
          title: 'Test API',
          version: '1.0.0',
          description: 'Test Express API with autogenerated swagger doc',
        },
      },
      // List of files to be processes. You can also set globs './routes/*.js'
      apis: ['./src/routes/*.js'],
    };

    this.express = express();
    this.middlewares();
    this.routes();
  }

  middlewares() {
    this.express.use(express.json());
    this.express.use(helmet());
    this.express.use(cors());
    this.express.use(morgan('dev'));
  }

  routes() {
    this.express.use(
      '/api-docs',
      swaggerUi.serve,
      swaggerUi.setup(swaggerJsdoc(this.options)),
    );

    this.express.use(routes.root);
    this.express.use(routes.example);
  }
}

module.exports = new Application().express;
